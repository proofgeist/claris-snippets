{"id":"e2fbc691-23ed-41d9-8995-62d64128fde1","name":"SQL Custom functions","type":"customFunction","snippet":"<fmxmlsnippet type=\"FMObjectList\"><CustomFunction id=\"43\" functionArity=\"3\" visible=\"True\" parameters=\"columnField;whereField;whereValue\" name=\"SQL.GetColumn\"><Calculation><![CDATA[/**\r * \r * get the values in a field using two WHERE field searches\r *\r * @param {reference} columnField\r * @param {reference} whereField\r * @param {string} whereValue\r * @param {reference} whereField2\r * @param {string} whereValue2\r *\r * @returns {string} the list of values in the field targeted with 'columnField'\r *\r * @module fm-sql-cfs\r * @see https://github.com/karbonfm/fm-sql-cfs\r * \r * @history  2017-11-19, todd@geistinteractive.com\r *\r */\r\rLet(\r[\rsql = SQL.GetColumnStatement (columnField; whereField ; \"?\" ) \r\r];\r\r\rExecuteSQL (\r\rsql ; \r\r\"\" ;\"\" ; whereValue\r\r)\r)]]></Calculation></CustomFunction><CustomFunction id=\"33\" functionArity=\"5\" visible=\"True\" parameters=\"columnField;whereField;whereValue;whereField2;whereValue2\" name=\"SQL.GetColumn2Fields\"><Calculation><![CDATA[/**\r * \r * get the values in a field using two WHERE field searches\r *\r * @param {reference} columnField\r * @param {reference} whereField\r * @param {string} whereValue\r * @param {reference} whereField2\r * @param {string} whereValue2\r *\r * @returns {string} the list of values in the field targeted with 'columnField'\r *\r * @module fm-sql-cfs\r * @see https://github.com/karbonfm/fm-sql-cfs\r * \r * @history  2017-11-17, todd@geistinteractive.com\r *\r */\r\rLet(\r[\rsql = SQL.GetColumnStatement (columnField; whereField ; \"?\" ) ;\r\rsql = List(\r\"SELECT ''|| \" & SQL.GetFieldName ( columnField ) ;\r\"FROM \" & SQL.GetTableName ( whereField ) ;\r\"WHERE \" & SQL.GetFieldName ( whereField ) & \"=?\" ;\r\"AND\" ; \rSQL.GetFieldName ( whereField2 ) & \"=?\" \r)\r\r\r\r\r];\r\r\rExecuteSQL (\r\rsql ; \r\r\"\" ;\"\" ; whereValue; whereValue2\r\r) \r\r)]]></Calculation></CustomFunction><CustomFunction id=\"32\" functionArity=\"3\" visible=\"True\" parameters=\"theField;whereField;whereValue\" name=\"SQL.GetColumnStatement\"><Calculation><![CDATA[/**\r * \r * get the values in a field using two WHERE field searches\r *\r * @param {reference} columnField\r * @param {reference} whereField\r * @param {string} whereValue\r * @param {reference} whereField2\r * @param {string} whereValue2\r *\r * @returns {string} the list of values in the field targeted with 'columnField'\r *\r * @module fm-sql-cfs\r * @see https://github.com/karbonfm/fm-sql-cfs\r * \r * @history  2017-11-17, todd@geistinteractive.com\r *\r */\r\rList(\r\"SELECT \" & SQL.GetFieldName ( theField );\r\"FROM \" & SQL.GetTableName ( theField );\rCase(\r   not IsEmpty( GetFieldName( whereField) ) ; \"WHERE \" & SQL.GetFieldName(whereField) & \"=\" & whereValue;\r  \"\"\r)\r)]]></Calculation></CustomFunction><CustomFunction id=\"34\" functionArity=\"1\" visible=\"True\" parameters=\"field\" name=\"SQL.GetFieldName\"><Calculation><![CDATA[/**\r * \r * get the fully qualified SQL Name of a Field\r *\r * @param {reference} field\r *\r * @returns {string} \r *\r * @module fm-sql-cfs\r * @see https://github.com/karbonfm/fm-sql-cfs\r * \r * @history  2017-11-17, todd@geistinteractive.com\r *\r */\r\r\rLet(\r[\r\r\r\rq = \"\\\"\";\rfn = GetFieldName( field );\rfn = Case( fn = \"?\" ; field; fn);\r\r\rfield =   q &  Substitute(  fn; \"::\" ; q & \".\" & q ) & q \r\r\r];\r\rfield\r\r)]]></Calculation></CustomFunction><CustomFunction id=\"35\" functionArity=\"2\" visible=\"True\" parameters=\"whereField;whereValue\" name=\"SQL.GetRecordsAsJSON\"><Calculation><![CDATA[/**\r *\r * Searches the Table specified by the WhereField and retuns a JSON Array\r * uses SQL for the search and a field called AsJSON as the json object for the record\r *\r * @param {fieldReferece} whereField the field to search using a SQL \"=\"\r * @param {fieldReferece} whereValue the value to searhc for\r *\r * @return {array}\r *\r * @module fm-sql-cfs\r * @see https://github.com/karbonfm/fm-sql-cfs\r * \r * @history  2017-11-17, todd@geistinteractive.com\r *\r */\r\r\rLet(\r[\r\rsql = List(\r\"SELECT ''|| \" & SQL.GetTableName ( whereField ) & \".\\\"AsJSON\\\"\" ;\r\"FROM \" & SQL.GetTableName ( whereField ) ;\r\"WHERE \" & SQL.GetFieldName ( whereField ) & \"=?\" \r);\rresult = ExecuteSQL (\r\rsql ; \r\r\"\" ;\",\" ; whereValue\r\r)\r\r\r];\r\r\"[\" & result & \"]\"\r\r\r)]]></Calculation></CustomFunction><CustomFunction id=\"36\" functionArity=\"1\" visible=\"True\" parameters=\"field\" name=\"SQL.GetTableName\"><Calculation><![CDATA[/**\r * \r * get the fully qualified SQL Name of a Table\r *\r * @param {reference} field\r *\r * @returns {string} \r *\r * @module fm-sql-cfs\r * @see https://github.com/karbonfm/fm-sql-cfs\r * \r * @history  2017-11-17, todd@geistinteractive.com\r *\r */\r\r\rLet(\r[\r\r\r\rq = \"\\\"\";\rfn = GetFieldName( field );\rfn = Case( fn = \"?\" ; field; fn);\r\r\rtable =  Quote(GetValue ( Substitute(    fn ;  \"::\" ; \"Â¶\"  ) ; 1 ) ) \r\r];\r\rtable\r\r)]]></Calculation></CustomFunction><CustomFunction id=\"37\" functionArity=\"2\" visible=\"True\" parameters=\"WhereField;WhereValue\" name=\"SQL.RecordExists\"><Calculation><![CDATA[/**\r * \r * tests to so if the record target by the SQL Where Field exists\r * often used to see if a record with a primary key exists\r *\r * @param {refernce} WhereField the field to search with SQL\r * @param {string} WhereValue\r *\r * @returns {boolean} \r *\r * @module fm-sql-cfs\r * @see https://github.com/karbonfm/fm-sql-cfs\r * \r * @history  2017-11-17, todd@geistinteractive.com\r *\r */\r\rSQL.GetColumnStatement ( WhereField ; WhereField ;  WhereValue ) <> \"\"]]></Calculation></CustomFunction></fmxmlsnippet>","tags":[""],"description":"","customXML":false,"dynamicFields":[]}